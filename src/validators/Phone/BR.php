<?php

declare(strict_types=1);

###############################################################################################################
###############################################################################################################
##                                                                                                           ##
##  ######################     #####            #####     #####            #####     ######################  ##
##  ######################     #####            #####     #####            #####     ######################  ##
##  ######################     ######           #####     #####            #####     ######################  ##
##  ######################     #######          #####     #####            #####     ######################  ##
##  ######################     ########         #####     #####            #####     ######################  ##
##  #####            #####     #########        #####     #####            #####     #####                   ##
##  #####            #####     ##########       #####     #####            #####     #####     .COM.BR       ##
##  #####            #####     ##### #####      #####     ######################     ######################  ##
##  #####            #####     #####  #####     #####     ######################     ######################  ##
##  ######################     #####   #####    #####     ######################     ######################  ##
##  ######################     #####    #####   #####     ######################     ######################  ##
##  ######################     #####     #####  #####     ######################     ######################  ##
##  ######################     #####      ##### #####     #####            #####                      #####  ##
##  ######################     #####       ##########     #####            #####                      #####  ##
##  #####                      #####        #########     #####            #####     ######################  ##
##  #####                      #####         ########     #####            #####     ######################  ##
##  #####                      #####          #######     #####            #####     ######################  ##
##  #####                      #####           ######     #####            #####     ######################  ##
##  #####                      #####            #####     #####            #####     ######################  ##
##                                                                                                           ##
###############################################################################################################
##                   TODOS OS DIREITOS RESERVADOS  O SENHOR E MEU PASTOR E NADA ME FALTARÁ                   ##
###############################################################################################################
###############################################################################################################
###############################################################################################################
##                                          INICIO CÓDIGO DE FONTE!                                          ##
###############################################################################################################

namespace Pnhs\FormValidator\validators\Phone;

/**
 *
 * @author Nícola Serafim <nicola@seraf.im>
 */
class BR
{
  public function run(string $number, int $length)
  {
    if ($length == 11 && $number[2] == 9) {
      return [
        'formatted' => '(' . substr($number, 0, 2) . ') ' . substr($number, 2, 1) . ' ' . substr($number, 3, 4) . ' - ' . substr($number, 7, 4),
        'type'      => 'cellphone'
      ];
    } elseif ($length == 10 && ($number[2] == 2 | $number[2] == 3)) {
      return [
        'formatted' => '(' . substr($number, 0, 2) . ') ' . substr($number, 2, 4) . ' - ' . substr($number, 6, 4),
        'type'      => 'landline'
      ];
    } elseif ($length == 11 && substr($number, 0, 4) == '0300') {
      return [
        'formatted' => $this->formatted0800($number),
        'type'      => '0300'
      ];
    } elseif ($length == 8 && substr($number, 0, 4) == '4003') {
      return [
        'formatted' => $this->formatted4003($number),
        'type'      => '4003'
      ];
    } elseif ($length == 8 && substr($number, 0, 4) == '4004') {
      return [
        'formatted' => $this->formatted4003($number),
        'type'      => '4004'
      ];
    } elseif ($length == 11 && substr($number, 0, 4) == '0500') {
      return [
        'formatted' => $this->formatted0800($number),
        'type'      => '0500'
      ];
    } elseif ($length == 11 && substr($number, 0, 4) == '0800') {
      return [
        'formatted' => $this->formatted0800($number),
        'type'      => '0800'
      ];
    } elseif ($length == 11 && substr($number, 0, 4) == '0900') {
      return [
        'formatted' => $this->formatted0800($number),
        'type'      => '0900'
      ];
    }
  }

  private function formatted0800($number)
  {
    return substr($number, 0, 4) . ' ' . substr($number, 4, 3) . ' ' . substr($number, 7, 4);
  }

  private function formatted4003($number)
  {
    return substr($number, 0, 4) . ' ' . substr($number, 4, 4);
  }
}
